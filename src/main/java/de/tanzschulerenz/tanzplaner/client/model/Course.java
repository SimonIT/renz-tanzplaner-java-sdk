/*
 * Tanzplaner
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.tanzschulerenz.tanzplaner.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.tanzschulerenz.tanzplaner.client.model.Entry;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import de.tanzschulerenz.tanzplaner.client.JSON;

/**
 * Course
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Course {
  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DESCRIPTION_SHORT = "description_short";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_SHORT)
  private String descriptionShort;

  public static final String SERIALIZED_NAME_ENTRIES = "entries";
  @SerializedName(SERIALIZED_NAME_ENTRIES)
  private List<Entry> entries = null;

  public static final String SERIALIZED_NAME_GROUP_ENTRIES = "group_entries";
  @SerializedName(SERIALIZED_NAME_GROUP_ENTRIES)
  private Boolean groupEntries;

  public static final String SERIALIZED_NAME_GROUPED_ENTRIES = "grouped_entries";
  @SerializedName(SERIALIZED_NAME_GROUPED_ENTRIES)
  private List<List<Entry>> groupedEntries = null;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_MODIFIED = "modified";
  @SerializedName(SERIALIZED_NAME_MODIFIED)
  private OffsetDateTime modified;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SLUG = "slug";
  @SerializedName(SERIALIZED_NAME_SLUG)
  private String slug;

  public static final String SERIALIZED_NAME_SORTING = "sorting";
  @SerializedName(SERIALIZED_NAME_SORTING)
  private Integer sorting;

  public Course() { 
  }

  public Course created(OffsetDateTime created) {
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreated() {
    return created;
  }


  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public Course description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Course descriptionShort(String descriptionShort) {
    
    this.descriptionShort = descriptionShort;
    return this;
  }

   /**
   * Get descriptionShort
   * @return descriptionShort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescriptionShort() {
    return descriptionShort;
  }


  public void setDescriptionShort(String descriptionShort) {
    this.descriptionShort = descriptionShort;
  }


  public Course entries(List<Entry> entries) {
    
    this.entries = entries;
    return this;
  }

  public Course addEntriesItem(Entry entriesItem) {
    if (this.entries == null) {
      this.entries = new ArrayList<>();
    }
    this.entries.add(entriesItem);
    return this;
  }

   /**
   * Get entries
   * @return entries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Entry> getEntries() {
    return entries;
  }


  public void setEntries(List<Entry> entries) {
    this.entries = entries;
  }


  public Course groupEntries(Boolean groupEntries) {
    
    this.groupEntries = groupEntries;
    return this;
  }

   /**
   * Get groupEntries
   * @return groupEntries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getGroupEntries() {
    return groupEntries;
  }


  public void setGroupEntries(Boolean groupEntries) {
    this.groupEntries = groupEntries;
  }


  public Course groupedEntries(List<List<Entry>> groupedEntries) {
    
    this.groupedEntries = groupedEntries;
    return this;
  }

  public Course addGroupedEntriesItem(List<Entry> groupedEntriesItem) {
    if (this.groupedEntries == null) {
      this.groupedEntries = new ArrayList<>();
    }
    this.groupedEntries.add(groupedEntriesItem);
    return this;
  }

   /**
   * Get groupedEntries
   * @return groupedEntries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<List<Entry>> getGroupedEntries() {
    return groupedEntries;
  }


  public void setGroupedEntries(List<List<Entry>> groupedEntries) {
    this.groupedEntries = groupedEntries;
  }


  public Course id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public Course modified(OffsetDateTime modified) {
    
    this.modified = modified;
    return this;
  }

   /**
   * Get modified
   * @return modified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getModified() {
    return modified;
  }


  public void setModified(OffsetDateTime modified) {
    this.modified = modified;
  }


  public Course name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Course slug(String slug) {
    
    this.slug = slug;
    return this;
  }

   /**
   * Get slug
   * @return slug
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSlug() {
    return slug;
  }


  public void setSlug(String slug) {
    this.slug = slug;
  }


  public Course sorting(Integer sorting) {
    
    this.sorting = sorting;
    return this;
  }

   /**
   * Get sorting
   * @return sorting
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSorting() {
    return sorting;
  }


  public void setSorting(Integer sorting) {
    this.sorting = sorting;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Course course = (Course) o;
    return Objects.equals(this.created, course.created) &&
        Objects.equals(this.description, course.description) &&
        Objects.equals(this.descriptionShort, course.descriptionShort) &&
        Objects.equals(this.entries, course.entries) &&
        Objects.equals(this.groupEntries, course.groupEntries) &&
        Objects.equals(this.groupedEntries, course.groupedEntries) &&
        Objects.equals(this.id, course.id) &&
        Objects.equals(this.modified, course.modified) &&
        Objects.equals(this.name, course.name) &&
        Objects.equals(this.slug, course.slug) &&
        Objects.equals(this.sorting, course.sorting);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, description, descriptionShort, entries, groupEntries, groupedEntries, id, modified, name, slug, sorting);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Course {\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    descriptionShort: ").append(toIndentedString(descriptionShort)).append("\n");
    sb.append("    entries: ").append(toIndentedString(entries)).append("\n");
    sb.append("    groupEntries: ").append(toIndentedString(groupEntries)).append("\n");
    sb.append("    groupedEntries: ").append(toIndentedString(groupedEntries)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    sorting: ").append(toIndentedString(sorting)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("created");
    openapiFields.add("description");
    openapiFields.add("description_short");
    openapiFields.add("entries");
    openapiFields.add("group_entries");
    openapiFields.add("grouped_entries");
    openapiFields.add("id");
    openapiFields.add("modified");
    openapiFields.add("name");
    openapiFields.add("slug");
    openapiFields.add("sorting");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Course
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (Course.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has reuqired fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in Course is not found in the empty JSON string", Course.openapiRequiredFields.toString()));
        }
      }
      Set<java.util.Map.Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (java.util.Map.Entry<String, JsonElement> entry : entries) {
        if (!Course.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Course` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      JsonArray jsonArrayentries = jsonObj.getAsJsonArray("entries");
      // validate the optional field `entries` (array)
      if (jsonArrayentries != null) {
        for (int i = 0; i < jsonArrayentries.size(); i++) {
          Entry.validateJsonObject(jsonArrayentries.get(i).getAsJsonObject());
        };
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Course.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Course' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Course> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Course.class));

       return (TypeAdapter<T>) new TypeAdapter<Course>() {
           @Override
           public void write(JsonWriter out, Course value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Course read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Course given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Course
  * @throws IOException if the JSON string is invalid with respect to Course
  */
  public static Course fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Course.class);
  }

 /**
  * Convert an instance of Course to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

